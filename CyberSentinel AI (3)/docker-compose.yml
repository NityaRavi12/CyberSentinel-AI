version: '3.8'

services:
  # CyberSentinel AI Application
  cybersentinel:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://cybersentinel:password@postgres:5432/cybersentinel
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=cybersentinel
      - POSTGRES_USER=cybersentinel
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for caching and message queuing
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data: 